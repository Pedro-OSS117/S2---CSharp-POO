Exo 1 - Gestion de stock

Soit à développer une application pour la gestion de stock. 
Un article est caractérisé par son numéro de référence, son nom, son prix d’achat et son prix de vente.

1) Créer la classe Article.
2) Ajouter un constructeur à la classe Article.
3) Définir une méthode qui retourne une chaine de caractères représentant les différents attributs de l’objet Article. 
Pour gérer le stock du magasin, ce dernier se caractérise par son stock d’articles. 
Le stock est représenté par une collection d’objets Article.
4) Ecrire la classe Stock qui permet de réaliser les fonctionnalités suivantes :
    a. Ajouter un nouvel Article.
    b. Afficher tous les Articles du magasin.
    c. Rechercher un Article.
    d. Afficher les Articles dont les prix d’achat est supérieur à une valeur saisie.
    e. Supprimer un Article.
    f. Modifier un Article.
5) Utiliser les deux classes dans main pour en faire un exemple de programme de stockage


Exo 2 - Adhérents médiathèque

Soit à développer une application de gestion des adhérents qui sont inscrits dans une Médiathèque. 
Lorsqu’un adhérent est inscrit à la Médiathèque, on lui affecte automatiquement un numéro et on fixe sa cotisation.
L’ adhèrent qui le souhaite peut ne plus appartenir à la médiathèque, il démissionne.

1. Créer la classe Adhérent.
2. Ajouter à la classe Adhérent les méthodes :
         a. ToString () : affichage des attributs de la classe Adhérent sous forme de chaine de caractères.
         b. Modifie (Double cotisation) : modification de la cotisation.
3. Ajouter un constructeur par défaut qui permet de créer un objet Adhérent dont le nom est « anonyme ».
4. Ajouter un constructeur qui permet de crée un objet adhèrent en générant un numéro aléatoire.
5. Ecrire le code permettant de saisir un adhèrent et prévoir les cas d’exception.
6. Ajouter une méthode de modification d’un adhèrent.
7. Ajouter une méthode d’affichage et de recherche d’un adhèrent.
8. Ajouter une méthode de suppression d’un adhérent.
9. Ajouter une méthode d’affichage de tous les adhérents.

Exo 3 - Rectangle

1 - Creer une classe Rectangle et Ajoutez des attributs à la classe : sa largeur, sa hauteur en pixel et sa position à l’écran (positionX,positionY) en pixel.
2 - Ajoutez un constructeur paramétrique qui initialise la taille et la position de l’objet.
3 - Ajoutez une méthode d’instance Aire (sans argument) qui retourne l’aire du rectangle.
4 - Dans la méthode Main de la classe Program :
- Créez une nouvelle instance de la classe Rectangle de dimension 20 par 30 à la position (15,20).
- Affichez les valeurs des attributs de l’objet créé.
- Affichez l’aire de l’objet créé (utilisez la méthode Aire) afin de la calculer.
- Exécutez votre programme et vérifiez que tout fonctionne correctement (ajoutez l’instruction Console.Read(); à la fin du Main pour éviter que la fenêtre ne se ferme tout de suite).
5 - Ajoutez un constructeur sans argument qui initialise la forme comme un carré de coté 10 et de position (0,0). Respectez le principe DRY : utilisez le chainage de constructeurs pour que le corps de votre constructeur ne contienne aucune instruction !
6 - Ajoutez une méthode DoublerTaille qui multiplie la largeur et la longueur du rectangle par 2.
7 - Dans la méthode Main de la classe Program :
- Créez une nouvelle instance de la classe Rectangle avec votre constructeur sans argument.
- Doublez la taille du rectangle créé avec la méthode DoublerTaille.
- Affichez les dimensions du rectangle pour vérifier que tout a bien fonctionné.
8 - Ajoutez une méthode TestePlusPetit qui prend en paramètre un rectangle r et retourne vrai si l’aire de r est plus petite que l’aire de l’instance courante.
9 - Dans la méthode Main de la classe Program : Testez la méthode TestePlusPetit avec les 2 références de Rectangle déjà créées.
10 - Créez le constructeur de copie : constructeur qui reçoit en paramètre une référence sur un objet du même type et qui initialise à l’identique l’objet en cours de création. Respectez le principe DRY : utilisez le chainage de constructeurs pour que le corps de votre constructeur ne contienne aucune instruction !
11 - Dans la méthode Main de la classe Program :
- Créez une copie du premier rectangle créé.
- Modifiez la largeur de la copie.
- Vérifiez que la largeur du premier rectangle n’a pas changé.